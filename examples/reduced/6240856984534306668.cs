// Generated by Fuzzlyn on 2018-06-25 14:34:09
// Seed: 6240856984534306668
// Reduced from 116.7 KiB to 1.2 KiB
// Debug: Runs successfully
// Release: Throws 'System.DivideByZeroException'
struct S0
{
    public uint F0;
    public ulong F2;
    public byte F4;
    public byte F6;
    public bool F8;
}

struct S1
{
    public S0 F9;
}

class C0
{
    public ulong F0;
    public short F2;
    public byte F3;
    public C0(short f2)
    {
        F2 = f2;
    }
}

class C1
{
    public C0 F0;
    public char F1;
    public C1(C0 f0)
    {
        F0 = f0;
    }
}

class C2
{
    public C1 F1;
    public C2(C1 f1)
    {
        F1 = f1;
    }
}

public class Program
{
    static C2 s_2 = new C2(new C1(new C0(0)));
    static S0 s_19;
    static S1[] s_29 = new S1[]{new S1()};
    public static void Main()
    {
        C0 vr54 = new C0(0);
        vr54.F0 /= ((ulong)((uint)(0 / (vr54.F2 | 1)) / (vr54.F2 | 1)) | 1);
        bool vr56 = s_29[0].F9.F8;
        var vr57 = new S0();
        s_2.F1.F1 = (char)M12(vr57);
        var vr60 = s_19.F0;
        var vr61 = new short[,, ]{{{0}}};
        C0 vr63 = new C0(0);
        var vr66 = new S0();
        M12(vr66);
    }

    static byte M12(S0 arg0)
    {
        bool vr8 = 0 < arg0.F0;
        if (vr8)
        {
            arg0.F4 = arg0.F6;
        }

        return s_2.F1.F0.F3;
    }
}
